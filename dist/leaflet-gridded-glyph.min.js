function t(t,i,n,r,s){e(t,i,n||0,r||t.length-1,s||a)}function e(t,a,n,r,s){for(;r>n;){if(r-n>600){var o=r-n+1,h=a-n+1,c=Math.log(o),l=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*l*(o-l)/o)*(h-o/2<0?-1:1);e(t,a,Math.max(n,Math.floor(a-h*l/o+d)),Math.min(r,Math.floor(a+(o-h)*l/o+d)),s)}var u=t[a],g=n,f=r;for(i(t,n,a),s(t[r],u)>0&&i(t,n,r);g<f;){for(i(t,g,f),g++,f--;s(t[g],u)<0;)g++;for(;s(t[f],u)>0;)f--}0===s(t[n],u)?i(t,n,f):i(t,++f,r),f<=a&&(n=f+1),a<=f&&(r=f-1)}}function i(t,e,i){var a=t[e];t[e]=t[i],t[i]=a}function a(t,e){return t<e?-1:t>e?1:0}class n{constructor(t=9){this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}all(){return this._all(this.data,[])}search(t){let e=this.data;const i=[];if(!m(t,e))return i;const a=this.toBBox,n=[];for(;e;){for(let r=0;r<e.children.length;r++){const s=e.children[r],o=e.leaf?a(s):s;m(t,o)&&(e.leaf?i.push(s):f(t,o)?this._all(s,i):n.push(s))}e=n.pop()}return i}collides(t){let e=this.data;if(!m(t,e))return!1;const i=[];for(;e;){for(let a=0;a<e.children.length;a++){const n=e.children[a],r=e.leaf?this.toBBox(n):n;if(m(t,r)){if(e.leaf||f(t,r))return!0;i.push(n)}}e=i.pop()}return!1}load(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(let e=0;e<t.length;e++)this.insert(t[e]);return this}let e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){const t=this.data;this.data=e,e=t}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e;return this}insert(t){return t&&this._insert(t,this.data.height-1),this}clear(){return this.data=p([]),this}remove(t,e){if(!t)return this;let i=this.data;const a=this.toBBox(t),n=[],s=[];let o,h,c;for(;i||n.length;){if(i||(i=n.pop(),h=n[n.length-1],o=s.pop(),c=!0),i.leaf){const a=r(t,i.children,e);if(-1!==a)return i.children.splice(a,1),n.push(i),this._condense(n),this}c||i.leaf||!f(i,a)?h?(o++,i=h.children[o],c=!1):i=null:(n.push(i),s.push(o),o=0,h=i,i=i.children[0])}return this}toBBox(t){return t}compareMinX(t,e){return t.minX-e.minX}compareMinY(t,e){return t.minY-e.minY}toJSON(){return this.data}fromJSON(t){return this.data=t,this}_all(t,e){const i=[];for(;t;)t.leaf?e.push(...t.children):i.push(...t.children),t=i.pop();return e}_build(t,e,i,a){const n=i-e+1;let r,o=this._maxEntries;if(n<=o)return r=p(t.slice(e,i+1)),s(r,this.toBBox),r;a||(a=Math.ceil(Math.log(n)/Math.log(o)),o=Math.ceil(n/Math.pow(o,a-1))),r=p([]),r.leaf=!1,r.height=a;const h=Math.ceil(n/o),c=h*Math.ceil(Math.sqrt(o));_(t,e,i,c,this.compareMinX);for(let n=e;n<=i;n+=c){const e=Math.min(n+c-1,i);_(t,n,e,h,this.compareMinY);for(let i=n;i<=e;i+=h){const n=Math.min(i+h-1,e);r.children.push(this._build(t,i,n,a-1))}}return s(r,this.toBBox),r}_chooseSubtree(t,e,i,a){for(;a.push(e),!e.leaf&&a.length-1!==i;){let i,a=1/0,s=1/0;for(let o=0;o<e.children.length;o++){const h=e.children[o],c=d(h),l=(n=t,r=h,(Math.max(r.maxX,n.maxX)-Math.min(r.minX,n.minX))*(Math.max(r.maxY,n.maxY)-Math.min(r.minY,n.minY))-c);l<s?(s=l,a=c<a?c:a,i=h):l===s&&c<a&&(a=c,i=h)}e=i||e.children[0]}var n,r;return e}_insert(t,e,i){const a=i?t:this.toBBox(t),n=[],r=this._chooseSubtree(a,this.data,e,n);for(r.children.push(t),h(r,a);e>=0&&n[e].children.length>this._maxEntries;)this._split(n,e),e--;this._adjustParentBBoxes(a,n,e)}_split(t,e){const i=t[e],a=i.children.length,n=this._minEntries;this._chooseSplitAxis(i,n,a);const r=this._chooseSplitIndex(i,n,a),o=p(i.children.splice(r,i.children.length-r));o.height=i.height,o.leaf=i.leaf,s(i,this.toBBox),s(o,this.toBBox),e?t[e-1].children.push(o):this._splitRoot(i,o)}_splitRoot(t,e){this.data=p([t,e]),this.data.height=t.height+1,this.data.leaf=!1,s(this.data,this.toBBox)}_chooseSplitIndex(t,e,i){let a,n=1/0,r=1/0;for(let s=e;s<=i-e;s++){const e=o(t,0,s,this.toBBox),h=o(t,s,i,this.toBBox),c=g(e,h),l=d(e)+d(h);c<n?(n=c,a=s,r=l<r?l:r):c===n&&l<r&&(r=l,a=s)}return a||i-e}_chooseSplitAxis(t,e,i){const a=t.leaf?this.compareMinX:c,n=t.leaf?this.compareMinY:l;this._allDistMargin(t,e,i,a)<this._allDistMargin(t,e,i,n)&&t.children.sort(a)}_allDistMargin(t,e,i,a){t.children.sort(a);const n=this.toBBox,r=o(t,0,e,n),s=o(t,i-e,i,n);let c=u(r)+u(s);for(let a=e;a<i-e;a++){const e=t.children[a];h(r,t.leaf?n(e):e),c+=u(r)}for(let a=i-e-1;a>=e;a--){const e=t.children[a];h(s,t.leaf?n(e):e),c+=u(s)}return c}_adjustParentBBoxes(t,e,i){for(let a=i;a>=0;a--)h(e[a],t)}_condense(t){for(let e,i=t.length-1;i>=0;i--)0===t[i].children.length?i>0?(e=t[i-1].children,e.splice(e.indexOf(t[i]),1)):this.clear():s(t[i],this.toBBox)}}function r(t,e,i){if(!i)return e.indexOf(t);for(let a=0;a<e.length;a++)if(i(t,e[a]))return a;return-1}function s(t,e){o(t,0,t.children.length,e,t)}function o(t,e,i,a,n){n||(n=p(null)),n.minX=1/0,n.minY=1/0,n.maxX=-1/0,n.maxY=-1/0;for(let r=e;r<i;r++){const e=t.children[r];h(n,t.leaf?a(e):e)}return n}function h(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function c(t,e){return t.minX-e.minX}function l(t,e){return t.minY-e.minY}function d(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function g(t,e){const i=Math.max(t.minX,e.minX),a=Math.max(t.minY,e.minY),n=Math.min(t.maxX,e.maxX),r=Math.min(t.maxY,e.maxY);return Math.max(0,n-i)*Math.max(0,r-a)}function f(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function m(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function _(e,i,a,n,r){const s=[i,a];for(;s.length;){if((a=s.pop())-(i=s.pop())<=n)continue;const o=i+Math.ceil((a-i)/n/2)*n;t(e,o,i,a,r),s.push(i,o,o,a)}}const y=function(t){function e(t){const e={NEIGHBORS_DI:[0,1,1,0,-1,-1],NEIGHBORS_DJ:[[-1,-1,0,1,0,-1],[-1,0,1,1,1,0]],NUM_NEIGHBORS:6};e.RADIUS=Math.trunc(1.3*t/2),e.WIDTH=2*e.RADIUS,e.HEIGHT=Math.trunc(e.RADIUS*Math.sqrt(3)),e.SIDE=3*e.RADIUS/2;let i=[e.RADIUS/2,e.SIDE,e.WIDTH,e.SIDE,e.RADIUS/2,0];e.CORNERS_DX=i;let a=[0,0,e.HEIGHT/2,e.HEIGHT,e.HEIGHT,e.HEIGHT/2];return e.CORNERS_DY=a,e}const i=e(t);let a,n;return{getColRow:(t,e)=>{let a=Math.floor(t/i.SIDE),n=t-i.SIDE*a,r=e-a%2*i.HEIGHT/2,s=Math.floor(r/i.HEIGHT),o=r-i.HEIGHT*s;return n>Math.abs(i.RADIUS/2-i.RADIUS*o/i.HEIGHT)?[a,s]:[a-1,s+a%2-(o<i.HEIGHT/2?1:0)]},getXYCentre:(t,e)=>{let a=[t*i.SIDE,i.HEIGHT*(2*e+t%2)/2];return[a[0]+i.RADIUS,a[1]+i.HEIGHT/2]},getXYCentreCellUnits:(t,e)=>{const i=Math.sqrt(3);let a=[1.5*t,i*(2*e+t%2)/2];return[a[0]+1,a[1]+i/2]},getBoundary:(r,s,o)=>{let h=[];o||(o=0),o>0&&o!=a&&(a=o,n=e(t-2*o));const c=o?n:i;let l=[r*i.SIDE,i.HEIGHT*(2*s+r%2)/2];for(let t=0;t<c.NUM_NEIGHBORS;t++)h.push([Math.round(l[0]+2*o/3*2+c.CORNERS_DX[t]),Math.round(l[1]+2*o/3*2+c.CORNERS_DY[t])]);return h},getCellSize:()=>t,type:"hex"}};class S{constructor(t){this.map=t}latLngToScreen(t){if(!this.map)return[0,0];let e;return e=Array.isArray(t)?this.map.latLngToContainerPoint([t[0],t[1]]):this.map.latLngToContainerPoint(t),[e.x,e.y]}screenToLatLng(t){if(!this.map)return[0,0];let e;e=Array.isArray(t)?{x:t[0],y:t[1]}:t;const i=this.map.containerPointToLatLng(e);return[i.lat,i.lng]}boundsToScreen(t){if(!this.map||!t)return null;const e=this.latLngToScreen(t.getNorthWest()),i=this.latLngToScreen(t.getSouthEast());return{northWest:e,southEast:i,width:i[0]-e[0],height:i[1]-e[1]}}screenToBounds(t){if(!this.map||!t)return null;const e=this.screenToLatLng(t.northWest),i=this.screenToLatLng(t.southEast);return L.latLngBounds(e,i)}metersToPixels(t){if(!this.map)return t;const e=this.map.getCenter(),i=this.map.latLngToContainerPoint(e),a=this.map.latLngToContainerPoint([e.lat,e.lng+t/111320]);return Math.abs(a.x-i.x)}pixelsToMeters(t){if(!this.map)return t;const e=this.map.getCenter(),i=this.map.latLngToContainerPoint(e),a=this.map.containerPointToLatLng({x:i.x+t,y:i.y});return e.distanceTo(a)}getViewport(){if(!this.map)return null;const t=this.map.getSize(),e=this.map.getBounds();return{width:t.x,height:t.y,bounds:this.boundsToScreen(e)}}isPointVisible(t){if(!this.map)return!1;const e=this.map.getSize();return t[0]>=0&&t[0]<=e.x&&t[1]>=0&&t[1]<=e.y}getZoomAdjustedGridSize(t,e=13){if(!this.map)return t;const i=this.map.getZoom()-e;return t*Math.pow(2,i)}}const T={NOMINAL:"nominal",ORDINAL:"ordinal",NUMERIC:"numeric",TEMPORAL:"temporal",UNKNOWN:"unknown"},M={COUNT:"count",SUM:"sum",MEAN:"mean",MEDIAN:"median",MODE:"mode",MIN:"min",MAX:"max",STD_DEV:"std_dev",VARIANCE:"variance",PERCENTILE:"percentile",UNIQUE_COUNT:"unique_count",FREQUENCY:"frequency"};class C{constructor(t={}){this.options={autoDetectTypes:!0,normalizeData:!1,defaultAggregation:M.COUNT,...t},this.dataSchema=null,this.processedData=[],this.aggregationCache=new Map}async loadData(t,e={}){const i={latField:"lat",lngField:"lng",geometryField:"geometry",...e};if("string"==typeof t)return this._loadCSV(t,i);if("FeatureCollection"===t.type)return this._loadGeoJSON(t,i);if(Array.isArray(t))return this._loadArray(t,i);throw new Error("Unsupported data format")}async _loadCSV(t,e){const i=t.trim().split("\n"),a=i[0].split(",").map((t=>t.trim())),n=[];for(let t=1;t<i.length;t++){const e=i[t].split(",").map((t=>t.trim())),r={};a.forEach(((t,i)=>{r[t]=this._parseValue(e[i])})),n.push(r)}return this._processRawData(n,e)}async _loadGeoJSON(t,e){const i=[];return t.features.forEach((t=>{const a={...t.properties};t.geometry&&"Point"===t.geometry.type&&(a[e.latField]=t.geometry.coordinates[1],a[e.lngField]=t.geometry.coordinates[0]),i.push(a)})),this._processRawData(i,e)}async _loadArray(t,e){return this._processRawData(t,e)}_processRawData(t,e){return this.processedData=t,this.options.autoDetectTypes&&(this.dataSchema=this._detectSchema(t)),this.processedData}_detectSchema(t){if(!t||0===t.length)return null;const e={},i=t[0];return Object.keys(i).forEach((a=>{const n=t.map((t=>t[a])).filter((t=>null!=t));e[a]={type:this._detectDataType(n),originalType:typeof i[a],hasNulls:n.length<t.length,uniqueCount:new Set(n).size,sampleValues:n.slice(0,5)}})),e}_detectDataType(t){if(0===t.length)return T.UNKNOWN;const e=t[0];if("number"==typeof e||!isNaN(Number(e))){if(t.map((t=>Number(t))).filter((t=>!isNaN(t))).length===t.length)return T.NUMERIC}return this._isDate(e)?T.TEMPORAL:this._isOrdinal(t)?T.ORDINAL:T.NOMINAL}_isDate(t){if(t instanceof Date)return!0;if("string"==typeof t){const e=new Date(t);return!isNaN(e.getTime())}return!1}_isOrdinal(t){const e=[...new Set(t)];if(e.length<=2)return!1;return[["low","medium","high"],["small","medium","large"],["beginner","intermediate","advanced"],["poor","fair","good","excellent"],["never","rarely","sometimes","often","always"]].some((t=>{const i=e.map((t=>String(t).toLowerCase()));return t.every((t=>i.includes(t)))}))}_parseValue(t){if(""===t||null==t)return null;const e=Number(t);if(!isNaN(e))return e;const i=new Date(t);return isNaN(i.getTime())?t:i}getSchema(){return this.dataSchema}getFieldsByType(t){return this.dataSchema?Object.keys(this.dataSchema).filter((e=>this.dataSchema[e].type===t)):[]}aggregateCellData(t,e={}){const i={fields:[],aggregations:{},...e};if(0===t.length)return{count:0};const a={count:t.length};return Object.keys(i.aggregations).forEach((e=>{const n=i.aggregations[e],r=t.map((t=>t[e])).filter((t=>null!=t));r.length>0&&(a[e]=this._applyAggregation(r,n))})),a}_applyAggregation(t,e){switch(e){case M.COUNT:return t.length;case M.SUM:return t.reduce(((t,e)=>t+e),0);case M.MEAN:return t.reduce(((t,e)=>t+e),0)/t.length;case M.MEDIAN:const e=[...t].sort(((t,e)=>t-e)),i=Math.floor(e.length/2);return e.length%2==0?(e[i-1]+e[i])/2:e[i];case M.MODE:const a={};return t.forEach((t=>{a[t]=(a[t]||0)+1})),Object.keys(a).reduce(((t,e)=>a[t]>a[e]?t:e));case M.MIN:return Math.min(...t);case M.MAX:return Math.max(...t);case M.STD_DEV:const n=t.reduce(((t,e)=>t+e),0)/t.length,r=t.reduce(((t,e)=>t+Math.pow(e-n,2)),0)/t.length;return Math.sqrt(r);case M.VARIANCE:const s=t.reduce(((t,e)=>t+e),0)/t.length;return t.reduce(((t,e)=>t+Math.pow(e-s,2)),0)/t.length;case M.UNIQUE_COUNT:return new Set(t).size;case M.FREQUENCY:const o={};return t.forEach((t=>{o[t]=(o[t]||0)+1})),o;default:return t}}normalizeValues(t,e="minmax"){const i=t.filter((t=>"number"==typeof t&&!isNaN(t)));if(0===i.length)return t;switch(e){case"minmax":const t=Math.min(...i),e=Math.max(...i)-t;return i.map((i=>0===e?0:(i-t)/e));case"zscore":const a=i.reduce(((t,e)=>t+e),0)/i.length,n=Math.sqrt(i.reduce(((t,e)=>t+Math.pow(e-a,2)),0)/i.length);return i.map((t=>0===n?0:(t-a)/n));case"decimal":const r=Math.max(...i);return i.map((t=>0===r?0:t/r));default:return i}}createAggregationConfig(t){if(!this.dataSchema)return{};const e={};return t.forEach((t=>{if(this.dataSchema[t]){switch(this.dataSchema[t].type){case T.NUMERIC:e[t]=M.MEAN;break;case T.NOMINAL:case T.ORDINAL:e[t]=M.FREQUENCY;break;case T.TEMPORAL:e[t]=M.MODE;break;default:e[t]=M.COUNT}}})),{fields:t,aggregations:e}}getVisualizationSuggestions(t){if(!this.dataSchema)return{};const e={};return t.forEach((t=>{if(this.dataSchema[t]){const i=this.dataSchema[t].type,a=this.dataSchema[t].uniqueCount;switch(i){case T.NUMERIC:e[t]=["bar","line","scatter","histogram"];break;case T.NOMINAL:e[t]=a<=10?["pie","bar","donut"]:["bar","treemap"];break;case T.ORDINAL:e[t]=["bar","line","area"];break;case T.TEMPORAL:e[t]=["line","area","bar"];break;default:e[t]=["text","icon"]}}})),e}reset(){this.aggregationCache.clear(),this.processedData=[],this.dataSchema=null}}function D(t={}){return new C(t)}"undefined"!=typeof window&&(window.DataProcessor=C,window.createDataProcessor=D,window.DATA_TYPES=T,window.AGGREGATION_TYPES=M);const x={BAR:"bar",PIE:"pie",LINE:"line",SCATTER:"scatter",HISTOGRAM:"histogram",DONUT:"donut",TREEMAP:"treemap",TEXT:"text",ICON:"icon",CIRCLE:"circle"};class E{constructor(t={}){this.options={defaultColors:["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD","#98D8C8","#F7DC6F","#BB8FCE","#85C1E9"],fontSize:12,fontFamily:"Arial, sans-serif",strokeWidth:1,...t}}drawChart(t,e,i,a,n,r){switch(i.type||x.CIRCLE){case x.BAR:this._drawBarChart(t,e,i,a,n,r);break;case x.PIE:this._drawPieChart(t,e,i,a,n,r);break;case x.LINE:this._drawLineChart(t,e,i,a,n,r);break;case x.SCATTER:this._drawScatterPlot(t,e,i,a,n,r);break;case x.HISTOGRAM:this._drawHistogram(t,e,i,a,n,r);break;case x.DONUT:this._drawDonutChart(t,e,i,a,n,r);break;case x.TREEMAP:this._drawTreemap(t,e,i,a,n,r);break;case x.TEXT:this._drawText(t,e,i,a,n,r);break;case x.ICON:this._drawIcon(t,e,i,a,n,r);break;default:this._drawCircle(t,e,i,a,n,r)}}_drawBarChart(t,e,i,a,n,r){const s=e[i.field];if(null==s)return;const o=s/(i.maxValue||s)*r*.8,h=.6*r;t.fillStyle=i.color||this.options.defaultColors[0],t.fillRect(a-h/2,n+r/2-o,h,o),t.strokeStyle="#000",t.lineWidth=this.options.strokeWidth,t.strokeRect(a-h/2,n+r/2-o,h,o)}_drawPieChart(t,e,i,a,n,r){const s=e[i.field];if(!s||"object"!=typeof s)return;const o=.4*r,h=Object.entries(s),c=h.reduce(((t,[e,i])=>t+i),0);if(0===c)return;let l=-Math.PI/2;h.forEach((([e,i],r)=>{const s=i/c*2*Math.PI;t.beginPath(),t.moveTo(a,n),t.arc(a,n,o,l,l+s),t.closePath(),t.fillStyle=this.options.defaultColors[r%this.options.defaultColors.length],t.fill(),t.strokeStyle="#000",t.lineWidth=this.options.strokeWidth,t.stroke(),l+=s}))}_drawLineChart(t,e,i,a,n,r){const s=e[i.field];if(!Array.isArray(s)||s.length<2)return;const o=.8*r,h=.6*r,c=Math.max(...s),l=Math.min(...s),d=c-l;0!==d&&(t.beginPath(),t.strokeStyle=i.color||this.options.defaultColors[0],t.lineWidth=2,s.forEach(((e,i)=>{const r=a-o/2+i/(s.length-1)*o,c=n+h/2-(e-l)/d*h;0===i?t.moveTo(r,c):t.lineTo(r,c)})),t.stroke())}_drawScatterPlot(t,e,i,a,n,r){const s=i.xField,o=i.yField;if(!s||!o)return;const h=e[s],c=e[o];if(!Array.isArray(h)||!Array.isArray(c))return;const l=.05*r;h.forEach(((e,s)=>{const o=c[s];if(null===e||null===o)return;const d=a+(e-Math.min(...h))/(Math.max(...h)-Math.min(...h))*r*.6-.3*r,u=n-(o-Math.min(...c))/(Math.max(...c)-Math.min(...c))*r*.6+.3*r;t.beginPath(),t.arc(d,u,l,0,2*Math.PI),t.fillStyle=i.color||this.options.defaultColors[0],t.fill()}))}_drawHistogram(t,e,i,a,n,r){const s=e[i.field];if(!Array.isArray(s)||0===s.length)return;const o=.8*r,h=.6*r,c=i.bins||5,l=Math.min(...s),d=(Math.max(...s)-l)/c,u=new Array(c).fill(0);s.forEach((t=>{const e=Math.min(Math.floor((t-l)/d),c-1);u[e]++}));const g=Math.max(...u),f=o/c;u.forEach(((e,i)=>{const r=e/g*h,s=a-o/2+i*f,c=n+h/2-r;t.fillStyle=this.options.defaultColors[i%this.options.defaultColors.length],t.fillRect(s,c,.8*f,r)}))}_drawDonutChart(t,e,i,a,n,r){const s=e[i.field];if(!s||"object"!=typeof s)return;const o=.4*r,h=.2*r,c=Object.entries(s),l=c.reduce(((t,[e,i])=>t+i),0);if(0===l)return;let d=-Math.PI/2;c.forEach((([e,i],r)=>{const s=i/l*2*Math.PI;t.beginPath(),t.arc(a,n,o,d,d+s),t.arc(a,n,h,d+s,d,!0),t.closePath(),t.fillStyle=this.options.defaultColors[r%this.options.defaultColors.length],t.fill(),d+=s}))}_drawTreemap(t,e,i,a,n,r){const s=e[i.field];if(!s||"object"!=typeof s)return;const o=Object.entries(s),h=o.reduce(((t,[e,i])=>t+i),0);if(0===h)return;const c=.8*r,l=.6*r,d=a-c/2;let u=d,g=n-l/2,f=0;o.forEach((([e,i],a)=>{const n=i/h*c*l,r=Math.sqrt(n*(c/l)),s=n/r;u+r>d+c&&(u=d,g+=f,f=0),t.fillStyle=this.options.defaultColors[a%this.options.defaultColors.length],t.fillRect(u,g,r,s),u+=r,f=Math.max(f,s)}))}_drawText(t,e,i,a,n,r){const s=e[i.field];if(null==s)return;t.fillStyle=i.color||"#000",t.font=`${this.options.fontSize}px ${this.options.fontFamily}`,t.textAlign="center",t.textBaseline="middle";const o=.8*r;let h=String(s);for(;t.measureText(h).width>o&&h.length>0;)h=h.slice(0,-1);t.fillText(h,a,n)}_drawIcon(t,e,i,a,n,r){const s=e[i.field];if(null==s)return;const o=.4*r;"number"==typeof s?(t.fillStyle=i.color||this.options.defaultColors[0],t.beginPath(),t.arc(a,n,o,0,2*Math.PI),t.fill(),t.fillStyle="#fff",t.font=`${this.options.fontSize}px ${this.options.fontFamily}`,t.textAlign="center",t.textBaseline="middle",t.fillText(Math.round(s),a,n)):(t.fillStyle=i.color||this.options.defaultColors[0],t.fillRect(a-o,n-o,2*o,2*o),t.fillStyle="#fff",t.font=`${this.options.fontSize}px ${this.options.fontFamily}`,t.textAlign="center",t.textBaseline="middle",t.fillText(String(s).charAt(0).toUpperCase(),a,n))}_drawCircle(t,e,i,a,n,r){const s=e[i.field||"count"];if(null==s)return;const o=i.maxValue||s,h=Math.min(s/o*r*.4,.4*r);t.beginPath(),t.arc(a,n,h,0,2*Math.PI),t.fillStyle=i.color||this.options.defaultColors[0],t.fill(),t.strokeStyle="#000",t.lineWidth=this.options.strokeWidth,t.stroke()}createVisualizationConfig(t,e,i={}){const a={field:t,color:i.color,...i};switch(e){case T.NUMERIC:return{...a,type:i.chartType||x.BAR,maxValue:i.maxValue};case T.NOMINAL:return{...a,type:i.chartType||x.PIE};case T.ORDINAL:return{...a,type:i.chartType||x.BAR};case T.TEMPORAL:return{...a,type:i.chartType||x.LINE};default:return{...a,type:i.chartType||x.TEXT}}}getAvailableChartTypes(t){switch(t){case T.NUMERIC:return[x.BAR,x.LINE,x.SCATTER,x.HISTOGRAM,x.CIRCLE];case T.NOMINAL:return[x.PIE,x.BAR,x.DONUT,x.TREEMAP,x.TEXT];case T.ORDINAL:return[x.BAR,x.LINE,x.AREA];case T.TEMPORAL:return[x.LINE,x.AREA,x.BAR];default:return[x.TEXT,x.ICON,x.CIRCLE]}}}function w(t={}){return new E(t)}"undefined"!=typeof window&&(window.VisualizationRenderer=E,window.createVisualizationRenderer=w,window.CHART_TYPES=x),L.GriddedGlyph=L.CanvasLayer.extend({initialize:function(t){var e;L.CanvasLayer.prototype.initialize.call(this,t),this._tree=new n,this.options=t||{},this.gridSize=t.gridSize||20,this.padding=t.padding||5,this.geojsonLayer=t.geojsonLayer,this.customDrawFunction=t.customDrawFunction,this.gridType=t.gridType||"square",this.debug=t.debug||!1,this.dynamicMode=t.dynamicMode||!1,this.dynamicThrottle=t.dynamicThrottle||16,this.dynamicAggregationFn=t.dynamicAggregationFn,this.dataProcessor=t.dataProcessor||D(t.dataProcessorOptions),this.visualizationRenderer=t.visualizationRenderer||w(t.visualizationOptions),this.aggregationConfig=t.aggregationConfig||{},this.visualizationConfig=t.visualizationConfig||{},this.selectedFields=t.selectedFields||[],this._discretizers={square:(e=this.gridSize,{getColRow:(t,i)=>[Math.trunc(t/e),Math.trunc(i/e)],getXYCentre:(t,i)=>[t*e+e/2,i*e+e/2],getBoundary:(t,i,a)=>{const n=a?e-2*a:e,r=[t*e+e/2,i*e+e/2];return[[r[0]-n/2,r[1]-n/2],[r[0]+n/2,r[1]-n/2],[r[0]+n/2,r[1]+n/2],[r[0]-n/2,r[1]+n/2]]},getBoundaryScreenCoord:(t,i,a)=>{const n=a?e-2*a:e,r=[t,i];return[[r[0]-n/2,r[1]-n/2],[r[0]+n/2,r[1]-n/2],[r[0]+n/2,r[1]+n/2],[r[0]-n/2,r[1]+n/2]]},getCellSize:()=>e,type:"grid"}),hexagon:y(this.gridSize)},this._coordTransformer=null,this.gridData=[],this._cachedBounds=null,this._cachedZoom=null,this._cachedGridSize=null,this._cachedPadding=null,this._cachedGridType=null,this._dataHash=null,this._cachedGridOriginX=null,this._cachedGridOriginY=null,this._cachedScreenData=null,this._cachedMousePos=null,this._dynamicUpdateTimer=null,this._processedData=null,this._dataSchema=null,this._globalStats=null},_generateDataHash:function(){if(!this.geojsonLayer)return null;let t=0,e=0;return this.geojsonLayer.eachLayer((i=>{const a=i.getLatLng();t=(t<<5)-t+a.lat+a.lng&4294967295,e++})),t+"_"+e},_needsRecalculation:function(t){const e=this._map.getZoom(),i=this._generateDataHash(),a=this._map.latLngToContainerPoint(t.getNorthWest()),n=Math.floor(a.x/this.gridSize)*this.gridSize,r=Math.floor(a.y/this.gridSize)*this.gridSize,s=this._cachedGridOriginX!==n||this._cachedGridOriginY!==r,o=this._cachedZoom!==e,h=this._cachedGridSize!==this.gridSize,c=this._cachedPadding!==this.padding,l=this._cachedGridType!==this.gridType,d=this._dataHash!==i;return s||o||h||c||l||d},_updateCache:function(t){const e=this._map.latLngToContainerPoint(t.getNorthWest());this._cachedGridOriginX=Math.floor(e.x/this.gridSize)*this.gridSize,this._cachedGridOriginY=Math.floor(e.y/this.gridSize)*this.gridSize,this._cachedBounds=t,this._cachedZoom=this._map.getZoom(),this._cachedGridSize=this.gridSize,this._cachedPadding=this.padding,this._cachedGridType=this.gridType,this._dataHash=this._generateDataHash()},invalidateCache:function(){this._cachedBounds=null,this._cachedZoom=null,this._cachedGridSize=null,this._cachedPadding=null,this._cachedGridType=null,this._dataHash=null,this._cachedGridOriginX=null,this._cachedGridOriginY=null,this._cachedScreenData=null,this._cachedMousePos=null},invalidateDynamicCache:function(){this._cachedScreenData=null,this._cachedMousePos=null},getCacheStats:function(){return{hasCachedBounds:!!this._cachedBounds,cachedZoom:this._cachedZoom,cachedGridSize:this._cachedGridSize,cachedPadding:this._cachedPadding,cachedGridType:this._cachedGridType,dataHash:this._dataHash,currentDataHash:this._generateDataHash(),gridDataLength:this.gridData.length,dynamicMode:this.dynamicMode,cachedScreenData:!!this._cachedScreenData}},_coordToScreenFn:function(t){return this._coordTransformer?this._coordTransformer.latLngToScreen(t):[0,0]},_screenToCoordFn:function(t){return this._coordTransformer?this._coordTransformer.screenToLatLng(t):[0,0]},_processScreenData:function(){if(!this.geojsonLayer||!this._coordTransformer)return[];const t=[];return this._coordTransformer.getViewport(),this.geojsonLayer.eachLayer((e=>{const i=e.getLatLng(),a=this._coordToScreenFn(i);this._coordTransformer.isPointVisible(a)&&t.push({screenPoint:a,latLng:i,data:e,properties:e.feature?e.feature.properties:{}})})),t},_calculateDynamicGridData:function(t){if(!this._map)return;const e=this._discretizers[this.gridType];if(!e)return void console.warn(`Discretiser not found for grid type: ${this.gridType}`);let i=this._cachedScreenData;i||(i=this._processScreenData(),this._cachedScreenData=i),this.gridData=[];const a={};for(let t of i){const i=t.screenPoint,[n,r]=e.getColRow(i[0],i[1]),s=`${n},${r}`;let o=a[s];if(!o){const t=e.getXYCentre(n,r);o={col:n,row:r,x:t[0],y:t[1],count:0,attributes:[],getBoundary:t=>e.getBoundary(n,r,t),getXCentre:()=>t[0],getYCentre:()=>t[1],getCellSize:()=>this.gridSize},a[s]=o}o.count++,o.attributes.push(t.properties),this.dynamicAggregationFn&&this.dynamicAggregationFn(o,t,1,{},{})}Object.values(a).forEach((t=>{if(this.dataProcessor&&this.aggregationConfig.fields.length>0){const e=this._aggregateCellData(t.attributes);Object.assign(t,e)}})),this.gridData=Object.values(a),this.debug&&console.log(`Dynamic grid calculated: ${this.gridData.length} cells, ${i.length} data points`)},onAdd:function(t){L.CanvasLayer.prototype.onAdd.call(this,t),this._coordTransformer=function(t){return new S(t)}(t),this.dynamicMode?(t.on("zoom move mousemove",this._onDynamicEvent,this),t.on("zoomend moveend",this._onMapChangeEnd,this)):t.on("zoomend moveend",this._redraw,this),t.on("mousemove",this._onMouseMove,this)},onRemove:function(t){L.CanvasLayer.prototype.onRemove.call(this,t),this._tree.clear(),this.gridData=[],this._cachedBounds=null,this._cachedScreenData=null,this._dynamicUpdateTimer&&(clearTimeout(this._dynamicUpdateTimer),this._dynamicUpdateTimer=null),this.dynamicMode?(t.off("zoom move mousemove",this._onDynamicEvent,this),t.off("zoomend moveend",this._onMapChangeEnd,this)):t.off("zoomend moveend",this._redraw,this),t.off("mousemove",this._onMouseMove,this)},_onDynamicEvent:function(t){this._dynamicUpdateTimer&&clearTimeout(this._dynamicUpdateTimer),this._dynamicUpdateTimer=setTimeout((()=>{this._updateDynamicGrid(t)}),this.dynamicThrottle)},_onMapChangeEnd:function(t){this._cachedScreenData=null,this._updateDynamicGrid(t)},_updateDynamicGrid:function(t){if(!this.dynamicMode||!this._map)return;let e=null;if(t&&t.containerPoint)e=t.containerPoint,this._cachedMousePos=e;else if(this._cachedMousePos)e=this._cachedMousePos;else{const t=this._map.getSize();e={x:t.x/2,y:t.y/2}}this._calculateDynamicGridData(e),this._redraw()},_onMouseMove:function(t){var e=t.containerPoint;this._findCellByCoords(e)},_findCellByCoords:function(t){for(let e of this.gridData)if(this.dynamicMode){const i=e.getBoundary();if(i&&this._pointInPolygon(t,i))return e}else if(t.x>=e.x&&t.x<=e.x+this.gridSize&&t.y>=e.y&&t.y<=e.y+this.gridSize)return e;return null},_pointInPolygon:function(t,e){let i=!1;for(let a=0,n=e.length-1;a<e.length;n=a++)e[a][1]>t.y!=e[n][1]>t.y&&t.x<(e[n][0]-e[a][0])*(t.y-e[a][1])/(e[n][1]-e[a][1])+e[a][0]&&(i=!i);return i},_recalculateTree:function(){this._tree.clear(),this.geojsonLayer.eachLayer((t=>{const e=t.getLatLng();this._tree.insert({minX:e.lng,minY:e.lat,maxX:e.lng,maxY:e.lat,data:t})}))},calculateGridData:function(t){this.dynamicMode||(this._needsRecalculation(t)?(this.options.debug&&console.log("Grid data cache miss - recalculating"),"square"===this.gridType?this._calculateSquareGridData(t):"hexagon"===this.gridType?this._calculateHexagonGridData(t):"h3"===this.gridType||this.gridType,this._updateCache(t)):this.options.debug&&console.log("Grid data cache hit - using cached data"))},_calculateSquareGridData:function(t){if(!this._coordTransformer)return;const e=this._coordTransformer.boundsToScreen(t);if(!e)return;const{northWest:i,southEast:a}=e;var r=this.gridSize,s=Math.ceil((a[0]-i[0])/r),o=Math.ceil((a[1]-i[1])/r);this.gridData=[],this._tree||(this._tree=new n),this._tree.all&&0!==this._tree.all().length&&this._dataHash===this._generateDataHash()||this._recalculateTree();for(var h=0;h<o;h++)for(var c=0;c<s;c++){var l=i[0]+c*(r+this.padding),d=i[1]+h*(r+this.padding);const t=this._coordTransformer.screenToLatLng([l,d]),e=this._coordTransformer.screenToLatLng([l+r+this.padding,d+r+this.padding]),a=L.latLngBounds(t,e);var u=[];try{this._tree&&this._tree.search&&"function"==typeof this._tree.search&&(u=this._tree.search({minX:a.getWest(),minY:a.getSouth(),maxX:a.getEast(),maxY:a.getNorth()}))}catch(t){console.warn("Error searching tree:",t),u=[]}u&&Array.isArray(u)||(u=[]);const n={count:u.length,x:l,y:d,bounds:a,attributes:[],getBoundary:t=>{const e=t?r-2*t:r;return[[l+e/2,d+e/2],[l+e/2,d-e/2],[l-e/2,d-e/2],[l-e/2,d+e/2]]},getXCentre:()=>l+r/2,getYCentre:()=>d+r/2,getCellSize:()=>this.gridSize};for(const t of u)t&&t.data&&t.data.feature&&t.data.feature.properties&&n.attributes.push(t.data.feature.properties);if(this.dataProcessor&&this.aggregationConfig&&this.aggregationConfig.fields&&this.aggregationConfig.fields.length>0){const t=this._aggregateCellData(n.attributes);Object.assign(n,t)}n.count>0&&this.gridData.push(n)}},_calculateHexagonGridData:function(t){if(!this._coordTransformer)return;const e=this._coordTransformer.boundsToScreen(t);if(!e)return;const i=this._discretizers.hexagon;if(!i)return void console.warn("Hexagon discretiser not available");const{northWest:a,southEast:r}=e,[s,o]=i.getColRow(a[0],a[1]),[h,c]=i.getColRow(r[0],r[1]);this.gridData=[],this._tree||(this._tree=new n),this._tree.all&&0!==this._tree.all().length&&this._dataHash===this._generateDataHash()||this._recalculateTree();for(let t=s-1;t<=h+1;t++)for(let e=o-1;e<=c+1;e++){const a=i.getXYCentre(t,e),n=i.getBoundary(t,e,this.padding);if(!a||!n)continue;const r=n.map((t=>this._coordTransformer.screenToLatLng(t))),s=L.latLngBounds(r);var l=[];try{this._tree&&this._tree.search&&"function"==typeof this._tree.search&&(l=this._tree.search({minX:s.getWest(),minY:s.getSouth(),maxX:s.getEast(),maxY:s.getNorth()}))}catch(t){console.warn("Error searching tree:",t),l=[]}l&&Array.isArray(l)||(l=[]);const o={count:l.length,col:t,row:e,x:a[0],y:a[1],bounds:s,attributes:[],getBoundary:()=>n,getXCentre:()=>a[0],getYCentre:()=>a[1],getCellSize:()=>this.gridSize};for(const t of l)t&&t.data&&t.data.feature&&t.data.feature.properties&&o.attributes.push(t.data.feature.properties);if(this.dataProcessor&&this.aggregationConfig&&this.aggregationConfig.fields&&this.aggregationConfig.fields.length>0){const t=this._aggregateCellData(o.attributes);Object.assign(o,t)}o.count>0&&this.gridData.push(o)}},drawGrid:function(t,e){this.dynamicMode?this._drawDynamicGrid(t,e):"square"===this.gridType?this._drawSquareGrid(t,e):"hexagon"===this.gridType&&this._drawHexagonGrid(t,e)},_drawSquareGrid:function(t,e){t.fillStyle="rgba(255, 0, 0, 0.5)";for(let e of this.gridData)e.count>0&&t.fillRect(e.x,e.y,this.gridSize-this.padding,this.gridSize-this.padding)},_drawHexagonGrid:function(t,e){t.fillStyle="rgba(255, 0, 0, 0.5)";for(let e of this.gridData)if(e.count>0){const i=e.getBoundary(this.padding);if(i&&i.length>=3){t.beginPath(),t.moveTo(i[0][0],i[0][1]);for(let e=1;e<i.length;e++)t.lineTo(i[e][0],i[e][1]);t.closePath(),t.fill()}}},_drawDynamicGrid:function(t,e){t.fillStyle="rgba(255, 0, 0, 0.5)";for(let e of this.gridData)if(e.count>0){const i=e.getBoundary(this.padding);if(i&&i.length>=3){t.beginPath(),t.moveTo(i[0][0],i[0][1]);for(let e=1;e<i.length;e++)t.lineTo(i[e][0],i[e][1]);t.closePath(),t.fill()}else{const i=this.gridSize-this.padding;t.fillRect(e.x-i/2,e.y-i/2,i,i)}}},drawGlyphs:function(t,e){for(let e of this.gridData){let n,r;if(this.dynamicMode)n=e.getXCentre(),r=e.getYCentre();else if(e.bounds&&e.bounds.getNorthWest){var i=this._coordTransformer.latLngToScreen(e.bounds.getNorthWest()),a=this._coordTransformer.latLngToScreen(e.bounds.getSouthEast());n=(i[0]+a[0])/2,r=(i[1]+a[1])/2}else n=e.getXCentre(),r=e.getYCentre();if(this.visualizationRenderer&&this.visualizationConfig.type){const i=this.gridSize-this.padding;this.visualizationRenderer.drawChart(t,e,this.visualizationConfig,n,r,i)}else this.customDrawFunction?this.customDrawFunction(t,e,n,r):this._drawCircleGlyph(t,e,n,r)}},_drawCircleGlyph:function(t,e,i,a){t.strokeStyle="black";var n=this.gridSize/2-this.padding,r=Math.min(5*e.count,n);t.beginPath(),t.arc(i,a,r,0,2*Math.PI),t.stroke()},onDrawLayer:function(t){var e=t.canvas.getContext("2d"),i=this.geojsonLayer.getBounds();this.dynamicMode&&!this._cachedScreenData?(this._cachedScreenData=this._processScreenData(),this._calculateDynamicGridData(null)):this.dynamicMode||this.calculateGridData(i),this.drawGrid(e,i),this.drawGlyphs(e,i)},_redraw:function(){const t=this._canvas,e=t.getContext("2d");e.clearRect(0,0,t.width,t.height);const i=this.geojsonLayer.getBounds();this.calculateGridData(i),e.save(),this.drawGrid(e,i),e.restore(),e.save(),this.drawGlyphs(e,i),e.restore()},loadData:async function(t,e={}){try{return this._processedData=await this.dataProcessor.loadData(t,e),this._dataSchema=this.dataProcessor.getSchema(),this._globalStats=this._calculateGlobalStats(),this.debug&&(console.log("Data loaded:",this._processedData.length,"records"),console.log("Data schema:",this._dataSchema)),this.invalidateCache(),this._processedData}catch(t){throw console.error("Error loading data:",t),t}},getDataSchema:function(){return this._dataSchema},getFieldsByType:function(t){return this.dataProcessor.getFieldsByType(t)},setSelectedFields:function(t){this.selectedFields=t,this.aggregationConfig=this.dataProcessor.createAggregationConfig(t),this.invalidateCache()},setVisualizationConfig:function(t){this.visualizationConfig=t,this.invalidateCache()},_calculateGlobalStats:function(){if(!this._processedData||!this._dataSchema)return null;const t={};return Object.keys(this._dataSchema).forEach((e=>{const i=this._dataSchema[e].type,a=this._processedData.map((t=>t[e])).filter((t=>null!=t));i===T.NUMERIC&&a.length>0&&(t[e]={min:Math.min(...a),max:Math.max(...a),mean:a.reduce(((t,e)=>t+e),0)/a.length,count:a.length})})),t},getGlobalStats:function(){return this._globalStats},getVisualizationSuggestions:function(t){return this.dataProcessor.getVisualizationSuggestions(t)},_aggregateCellData:function(t){if(!(this.dataProcessor&&this.aggregationConfig&&this.aggregationConfig.fields&&this.aggregationConfig.fields.length))return{count:t?t.length:0,attributes:t||[]};try{return this.dataProcessor.aggregateCellData(t,this.aggregationConfig)}catch(e){return console.warn("Error in data aggregation:",e),{count:t?t.length:0,attributes:t||[]}}}}),L.griddedGlyph=function(t){return new L.GriddedGlyph(t)},"undefined"!=typeof window&&(window.L=window.L||{},window.L.GriddedGlyph=L.GriddedGlyph,window.L.griddedGlyph=L.griddedGlyph);
